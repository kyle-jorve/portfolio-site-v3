/*//////////////////////////////////////////////////////*/
/*//====================----------====================//*/
/*//                     BUTTONS                      //*/
/*//====================----------====================//*/
/*//////////////////////////////////////////////////////*/

button,
.button {
	cursor: pointer;
}

button {
	appearance: none;
	padding: 0;
	margin: 0;
	border: none;
	background: $linkColor;
	font-family: $buttonFont;
	font-weight: $buttonFontWeight;
	font-size: $buttonFontSize;
	letter-spacing: $buttonLetterSpacing;
	line-height: $buttonLineHeight;
	color: $lightTextColor;

	&:focus {
		outline: none;
	}
}

.button {
	/*==========----------==========*/
	/*           GENERAL            */
	/*==========----------==========*/

	$button: &;

	@include button;
	opacity: 1;
	visibility: visible;

	&:focus {
		outline: 0;
	}

	&__wrapper {
		@include flexWrap(row, wrap, flex-start, center);
		padding: 1em 0;

		&--justifyRight {
			justify-content: flex-end;
		}

		&--justifyCenter {
			justify-content: center;
		}

		&--justifyBetween {
			justify-content: space-between;
		}

		&--justifyAround {
			justify-content: space-around;
		}

		#{$button} {
			margin: 0.5em 0 0.5em 1em;
		}
	}

	&:disabled,
	&.disabled,
	&--disabled {
		filter: grayscale(100%);
		opacity: 0.5;
		cursor: default;
		pointer-events: none;
	}

	&--small {
		padding: 0.25em 0.5em;
		font-size: 1em;
	}

	&--displayNone {
		display: none;
	}

	&--next {
		z-index: 2;
	}

	/*==========----------==========*/
	/*        PRIMARY BUTTON        */
	/*==========----------==========*/
	&--primary {
		background: $linkColor;
		color: text-color($linkColor);

		@media (hover: hover) {
			&:hover {
				background: lighten-or-darken($linkColor);
				border-color: lighten-or-darken(lighten-or-darken($linkColor));
				color: text-color(lighten-or-darken($linkColor));
			}
		}
	}
	/*==========----------==========*/
	/*       SECONDARY BUTTON       */
	/*==========----------==========*/
	&--secondary {
		background: transparent;
		border: $borderThickness solid $linkColor;
		color: $linkColor;

		@media (hover: hover) {
			&:hover {
				background: $linkColor;
				color: text-color($linkColor);
				border-color: $linkColor;
			}
		}
	}
	/*==========----------==========*/
	/*       TERTIARY BUTTON        */
	/*==========----------==========*/
	&--tertiary {
		background: transparent;
		border: $borderThickness solid $medTextColor;
		color: $medTextColor;

		@media (hover: hover) {
			&:hover {
				background: $linkColor;
				color: text-color($linkColor);
				border-color: $linkColor;
			}
		}
	}
	/*==========----------==========*/
	/*      LIGHT BORDER BUTTON     */
	/*==========----------==========*/
	&--lightBorder {
		background: transparent;
		border: $borderThickness solid $lightTextColor;
		color: $lightTextColor;

		@media (hover: hover) {
			&:hover {
				background: $lightTextColor;
				color: $darkTextColor;
			}
		}
	}
	/*==========----------==========*/
	/*         TOAST BUTTON         */
	/*==========----------==========*/
	&--toastBtn {
		font-size: $smallFontSize;
	}
	/*==========----------==========*/
	/*         IMAGE BUTTON         */
	/*==========----------==========*/
	&--imageBtn {
		box-shadow: $softShadow;
		background: $imageBtnBg;
		border: $thickBorderThickness solid $imageBtnBorderColor;
		color: text-color($imageBtnBg);

		#{$button}__text {
			@include heading(null, 1em 0 0 0);
			display: block;
		}

		#{$button}__img,
		svg {
			width: auto;
			max-width: 4em;
			max-height: 4em;
			margin: 0 auto;
		}

		@media (hover: hover) {
			&:hover {
				background: $imageBtnBorderColor;
				color: text-color($imageBtnBorderColor);
			}
		}
	}
	/*==========----------==========*/
	/*         INFO BUTTON          */
	/*==========----------==========*/
	&--info {
		padding: 0.5em 1em;
		background: bg-color(map-get($bgColors, bodyBg));
		color: text-color(bg-color(map-get($bgColors, bodyBg)));

		&::before {
			@include icon(solid, info);
			margin-right: 0.5em;
			vertical-align: bottom;
		}

		@media (hover: hover) {
			&:hover {
				background: lighten-or-darken(bg-color(map-get($bgColors, bodyBg)));
				color: text-color(lighten-or-darken(bg-color(map-get($bgColors, bodyBg))));
			}
		}
	}
}

/*==========----------==========*/
/*        TO TOP BUTTON         */
/*==========----------==========*/

.toTopBtn {
	cursor: pointer;
	width: $socialIconDiam;
	height: $socialIconDiam;
	flex-shrink: 0;
	margin-left: 1em;
	border-radius: 50%;
	background: map-get($colorScheme, red);
	color: text-color(map-get($colorScheme, red));
	position: relative;
	transition: $transition;

	&:before {
		@include absolute(center);
		@include icon(solid, angle-up, block, 20px, 100%);
	}

	svg {
		@include absolute(center);
		width: $socialIconDiam * 0.65;
		height: $socialIconDiam * 0.65;
		fill: text-color(map-get($bgColors, darkBg));

		* {
			fill: inherit;
		}
	}

	@media (hover: hover) {
		&:hover {
			background: lighten-or-darken(map-get($colorScheme, red));
			color: text-color(lighten-or-darken(map-get($colorScheme, red)));

			svg {
				fill: text-color($linkColor);
			}
		}
	}
}

/*==========----------==========*/
/*         CROSS BUTTON         */
/*==========----------==========*/

.crossBtn {
	width: $crossBtnDiam;
	height: $crossBtnDiam;
	position: relative;
	transition: $transition;

	&__bar {
		$thisBar: &;

		@include absolute(center);
		display: block;
		background: $linkColor;
		transition: $transition;

		@if ($borderRadius != 0) {
			border-radius: $borderThickness / 2;
		}

		&--1 {
			width: 75%;
			height: $borderThickness;
		}

		&--2 {
			width: $borderThickness;
			height: 75%;
		}
	}
}

/*==========----------==========*/
/*         CLOSE BUTTON         */
/*==========----------==========*/

.closeBtn {
	$closeBtn: &;

	cursor: pointer;
	display: block;
	width: $crossBtnDiam;
	height: $crossBtnDiam;
	flex-shrink: 0;
	border-radius: $borderRadius;
	background: map-get($colorScheme, red);
	position: relative;
	transition: $transition;

	&__bar {
		$thisBar: &;

		display: block;
		width: 75%;
		height: $borderThickness;
		margin: 0;
		padding: 0;
		border: none;
		background: text-color(map-get($colorScheme, red));
		position: absolute;
		top: 50%;
		left: 50%;
		transition: $transition;

		&--1 {
			transform: translate(-50%, -50%) rotate(-45deg);
		}

		&--2 {
			transform: translate(-50%, -50%) rotate(45deg);
		}
	}

	&--circle {
		width: $circleBtnDiam;
		height: $circleBtnDiam;
		border-radius: 50%;

		#{$closeBtn}__bar {
			width: 50%;
		}
	}

	@media (hover: hover) {
		&:hover {
			background: $linkColor;

			#{$closeBtn}__bar {
				background: bg-color($linkColor);
			}
		}
	}
}

/*==========----------==========*/
/*       CIRCULAR BUTTONS       */
/*==========----------==========*/

.circleBtn {
	$circleBtn: &;

	@include circleBtn;

	&__bar {
		display: block;
		width: 50%;
		height: 2px;
		margin: 0;
		padding: 0;
		background: text-color(bg-color(map-get($bgColors, bodyBg)));
		border: none;
		position: absolute;
		transition: $transition;
	}

	@media (hover: hover) {
		&:hover {
			#{$circleBtn}__bar {
				background: text-color($linkColor);
			}
		}
	}

	/*---------- HOME BUTTON ----------*/
	&--home {
		background: bg-color(map-get($bgColors, bodyBg));

		&::before {
			@include iconContent(solid, home);
		}
	}

	/*---------- BACK BUTTON ----------*/
	&--back {
		background: bg-color(map-get($bgColors, bodyBg));

		svg {
			width: auto;
			height: 50%;
		}

		&::before {
			@include iconContent(solid, angle-left);
		}
	}

	/*---------- QUESTION BUTTON ----------*/
	&--question {
		width: $circleBtnDiam * 0.5;
		height: $circleBtnDiam * 0.5;

		&::before {
			@include iconContent(solid, question-mark);
			font-size: $circleBtnDiam * 0.25;
		}
	}

	/*---------- EXPAND BUTTON ----------*/
	&--expand {
		width: $circleBtnDiam * 0.5;
		height: $circleBtnDiam * 0.5;

		#{$circleBtn}__bar {
			width: $circleBtnDiam * 0.25;
			height: $borderThickness;
			background: text-color(map-get($bgColors, bodyBg));
			top: 50%;
			left: 50%;
			transition: $transition;

			&--1 {
				transform: translate(-50%, -50%);
			}

			&--2 {
				transform: translate(-50%, -50%) rotate(90deg);
			}
		}

		&.active #{$circleBtn}__bar--2 {
			transform: translate(-50%, -50%);
		}
	}

	/*---------- ADD & SUBTRACT BUTTONS ----------*/
	&--add,
	&--subtract {
		background: map-get($colorScheme, red);
		border: none;
		color: text-color(map-get($colorScheme, red));
		touch-action: none;

		&::before {
			font-size: $circleBtnDiam * 0.5;
		}

		@media (hover: hover) {
			&:hover {
				background: lighten-or-darken(map-get($colorScheme, red));
				color: text-color(lighten-or-darken(map-get($colorScheme, red)));
			}
		}
	}

	&--add::before {
		@include iconContent(solid, plus);
	}

	&--subtract::before {
		@include iconContent(solid, minus);
	}

	/*---------- SMALL CIRCLE BUTTON ----------*/
	&--small {
		width: $circleBtnDiam * 0.65;
		height: $circleBtnDiam * 0.65;

		&::before {
			font-size: $circleBtnDiam * 0.3;
		}
	}
}

/*//////////////////////////////////////////////////////*/
/*//====================----------====================//*/
/*//                  MEDIA QUERIES                   //*/
/*//====================----------====================//*/
/*//////////////////////////////////////////////////////*/

/*==========----------==========*/
/*         1000PX WIDTH         */
/*==========----------==========*/

@media only screen and (max-width: 1000px) {
	.circleBtn--question::before {
		font-size: $circleBtnDiam * 0.25;
	}
}

/*==========----------==========*/
/*         600PX WIDTH          */
/*==========----------==========*/

@media only screen and (max-width: 600px) {
	.crossBtn,
	.closeBtn {
		width: $crossBtnDiam * 0.75;
		height: $crossBtnDiam * 0.75;
	}

	.button--small {
		padding: 0.25em 0.5em;
	}
}
